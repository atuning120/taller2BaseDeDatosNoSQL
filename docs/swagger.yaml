basePath: /
definitions:
  models.Comentario:
    properties:
      autor:
        description: email del usuario
        type: string
      clase_id:
        type: string
      detalle:
        type: string
      fecha:
        type: string
      id:
        type: string
      me_gusta:
        type: integer
      no_me_gusta:
        type: integer
      password:
        description: password del usuario
        type: string
      titulo:
        type: string
    type: object
  models.ComentarioCurso:
    properties:
      curso_id:
        type: string
      email:
        type: string
      texto:
        type: string
    type: object
  models.Curso:
    properties:
      cant_clases:
        type: integer
      cant_usuarios:
        type: integer
      comentarios:
        description: Lista de IDs de comentarios
        items:
          type: string
        type: array
      descripcion:
        type: string
      id:
        type: string
      imagen_url:
        type: string
      nombre:
        type: string
      unidades:
        description: Lista de IDs de unidades
        items:
          type: string
        type: array
      valoracion:
        type: number
    type: object
  models.ProgresoCurso:
    properties:
      clases_vistas:
        items:
          type: string
        type: array
      curso_id:
        type: string
      estado:
        description: INICIADO, EN CURSO, COMPLETADO
        type: string
    type: object
  models.Puntuacion:
    properties:
      email:
        description: email del usuario
        type: string
      password:
        description: contrase침a del usuario
        type: string
      valor:
        type: number
    type: object
  models.Usuario:
    properties:
      email:
        type: string
      fecha_inscripcion:
        items:
          type: string
        type: array
      inscritos:
        description: IDs de cursos inscritos
        items:
          type: string
        type: array
      nombre:
        type: string
      password:
        type: string
      progresos:
        description: Progreso de los cursos
        items:
          $ref: '#/definitions/models.ProgresoCurso'
        type: array
    type: object
  request.CreateClaseRequest:
    properties:
      descripcion:
        type: string
      nombre:
        type: string
      video_url:
        type: string
    required:
    - descripcion
    - nombre
    - video_url
    type: object
  request.CreateCursoRequest:
    properties:
      descripcion:
        type: string
      imagen_url:
        type: string
      nombre:
        type: string
    required:
    - nombre
    type: object
  request.CreateUnidadRequest:
    properties:
      nombre:
        type: string
    required:
    - nombre
    type: object
  request.CreateUsuarioRequest:
    properties:
      email:
        type: string
      nombre:
        type: string
      password:
        type: string
    required:
    - email
    - nombre
    - password
    type: object
  request.InscripcionRequest:
    properties:
      curso_id:
        type: string
      email:
        type: string
      password:
        type: string
    required:
    - curso_id
    - email
    - password
    type: object
  request.UpdateValoracionRequest:
    properties:
      valoracion:
        type: number
    required:
    - valoracion
    type: object
  response.ClaseResponse:
    properties:
      adjuntos_url:
        items:
          type: string
        type: array
      comentarios:
        items:
          type: string
        type: array
      descripcion:
        type: string
      id:
        type: string
      me_gusta:
        type: integer
      no_me_gusta:
        type: integer
      nombre:
        type: string
      unidad_id:
        type: string
      video_url:
        type: string
    type: object
  response.CrearClase:
    properties:
      inserted_id:
        type: string
    type: object
  response.CrearCurso:
    properties:
      inserted_id:
        type: string
    type: object
  response.CrearUnidad:
    properties:
      inserted_id:
        type: string
    type: object
  response.CursoResponse:
    properties:
      cant_usuarios:
        type: integer
      comentarios:
        description: IDs de los comentarios
        items:
          type: string
        type: array
      descripcion:
        type: string
      id:
        type: string
      imagen_url:
        type: string
      nombre:
        type: string
      unidades:
        description: IDs de las unidades
        items:
          type: string
        type: array
      valoracion:
        type: number
    type: object
  response.ErrorResponse:
    properties:
      message:
        type: string
    type: object
  response.InscripcionResponse:
    properties:
      message:
        type: string
    type: object
  response.UpdateValoracionResponse:
    properties:
      message:
        type: string
      valoracion_actualizada:
        type: number
    type: object
  response.VerClaseResponse:
    properties:
      estado:
        type: string
      message:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Esta es una API para gestionar cursos y usuarios.
  title: API de Cursos y Usuarios
  version: "1.0"
paths:
  /api/clases/{id}/comentarios:
    get:
      consumes:
      - application/json
      description: Devuelve todos los comentarios asociados a una clase por su ID
      parameters:
      - description: ID de la clase
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Lista de comentarios
          schema:
            items:
              $ref: '#/definitions/models.Comentario'
            type: array
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Devuelve los comentarios de una clase
      tags:
      - Comentarios
    post:
      consumes:
      - application/json
      description: Agrega un comentario a una clase por su ID. Se requiere autor (email
        del usuario), password del usuario, titulo, detalle, meGusta, noMeGusta. La
        fecha se asigna autom치ticamente.
      parameters:
      - description: ID de la clase
        in: path
        name: id
        required: true
        type: string
      - description: Comentario a crear (autor, password, titulo, detalle, meGusta,
          noMeGusta)
        in: body
        name: comentario
        required: true
        schema:
          $ref: '#/definitions/models.Comentario'
      produces:
      - application/json
      responses:
        "201":
          description: Comentario creado exitosamente
          schema:
            $ref: '#/definitions/models.Comentario'
        "400":
          description: Datos inv치lidos o faltan campos requeridos
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Clase no encontrada o usuario no encontrado/credenciales inv치lidas
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Error interno del servidor
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Crear un comentario para una clase
      tags:
      - Comentarios
  /api/comentarios_curso:
    post:
      consumes:
      - application/json
      description: Agrega un comentario a un curso por su ID. El usuario se identifica
        por email.
      parameters:
      - description: Comentario a crear (usuario (email), cursoID, texto)
        in: body
        name: comentario
        required: true
        schema:
          $ref: '#/definitions/models.ComentarioCurso'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Comentario creado exitosamente'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Bad Request'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Crear un comentario para un curso
      tags:
      - ComentariosCurso
  /api/comentarios_curso/usuarios/{email}:
    get:
      consumes:
      - application/json
      description: Devuelve todos los comentarios hechos por un usuario por su email
      parameters:
      - description: Email del usuario
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'curso: nombre del curso, comentario: texto del comentario'
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: 'error: Bad Request'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener todos los comentarios hechos por un usuario
      tags:
      - ComentariosCurso
  /api/cursos:
    get:
      consumes:
      - application/json
      description: Devuelve todos los cursos disponibles
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.CursoResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Devuelve todos los cursos
      tags:
      - Cursos
    post:
      consumes:
      - application/json
      description: Agrega un curso a la base de datos
      parameters:
      - description: Curso a crear
        in: body
        name: curso
        required: true
        schema:
          $ref: '#/definitions/request.CreateCursoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CrearCurso'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Crear un curso
      tags:
      - Cursos
  /api/cursos/{id}:
    get:
      consumes:
      - application/json
      description: Devuelve un curso en espec칤fico dado su ID
      parameters:
      - description: ID del curso
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CursoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Devuelve un curso seg칰n su ID
      tags:
      - Cursos
  /api/cursos/{id}/clases:
    get:
      consumes:
      - application/json
      description: Devuelve todas las clases asociadas a un curso dado su ID
      parameters:
      - description: ID del curso
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.ClaseResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Devuelve todas las clases de un curso
      tags:
      - Cursos
  /api/cursos/{id}/unidades:
    get:
      consumes:
      - application/json
      description: Devuelve una unidades de un curso en espec칤fico dado su ID
      parameters:
      - description: ID del curso
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CursoResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Devuelve unidades de un curso
      tags:
      - Unidades
    post:
      consumes:
      - application/json
      description: agregar una unidad a un curso
      parameters:
      - description: Unidad a crear
        in: body
        name: unidad
        required: true
        schema:
          $ref: '#/definitions/request.CreateUnidadRequest'
      - description: ID del curso
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CrearUnidad'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Crear unidad
      tags:
      - Unidades
  /api/cursos/{id}/valoracion:
    patch:
      consumes:
      - application/json
      description: Actualiza la valoraci칩n de un curso seg칰n la nueva valoraci칩n proporcionada
      parameters:
      - description: ID del curso
        in: path
        name: id
        required: true
        type: string
      - description: Nueva valoraci칩n del curso
        in: body
        name: valoracion
        required: true
        schema:
          $ref: '#/definitions/request.UpdateValoracionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.UpdateValoracionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Actualiza la valoraci칩n de un curso
      tags:
      - Cursos
  /api/puntuaciones/cursos/{id}:
    post:
      consumes:
      - application/json
      description: Agrega una puntuaci칩n a un curso por su ID. El usuario se identifica
        por email y password, se verifica que est칠 inscrito en el curso. Solo se guarda
        el nombre del usuario en la relaci칩n.
      parameters:
      - description: ID del curso
        in: path
        name: id
        required: true
        type: string
      - description: Puntuaci칩n a crear (usuario (email), password, valor)
        in: body
        name: puntuacion
        required: true
        schema:
          $ref: '#/definitions/models.Puntuacion'
      produces:
      - application/json
      responses:
        "200":
          description: 'message: Puntuaci칩n creada exitosamente'
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: 'error: Bad Request'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Not Found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Crear una puntuaci칩n para un curso
      tags:
      - Puntuaciones
  /api/puntuaciones/cursos/{id}/promedio:
    get:
      consumes:
      - application/json
      description: Devuelve el promedio de puntuaciones de un curso por su ID
      parameters:
      - description: ID del curso
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'promedio: 0.0'
          schema:
            additionalProperties:
              type: number
            type: object
        "400":
          description: 'error: Bad Request'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Not Found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener el promedio de puntuaciones de un curso
      tags:
      - Puntuaciones
  /api/puntuaciones/usuarios/{email}:
    get:
      consumes:
      - application/json
      description: Devuelve todas las puntuaciones hechas por un usuario por su email
      parameters:
      - description: Email del usuario
        in: path
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'curso: nombre del curso, valoracion: valor de la puntuaci칩n'
          schema:
            items:
              additionalProperties: true
              type: object
            type: array
        "400":
          description: 'error: Bad Request'
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: 'error: Not Found'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: 'error: Internal Server Error'
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obtener todas las puntuaciones hechas por un usuario
      tags:
      - Puntuaciones
  /api/unidades/{id}/clases:
    get:
      consumes:
      - application/json
      description: Devuelve todas las clases asociadas a una unidad
      parameters:
      - description: ID de la unidad
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/response.ClaseResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Devuelve las clases de una unidad
      tags:
      - Clases
    post:
      consumes:
      - application/json
      description: Agrega una clase a la base de datos asociada a una unidad
      parameters:
      - description: ID de la unidad
        in: path
        name: id
        required: true
        type: string
      - description: Clase a crear
        in: body
        name: clase
        required: true
        schema:
          $ref: '#/definitions/request.CreateClaseRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.CrearClase'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Crear una clase para una unidad
      tags:
      - Clases
  /api/usuarios:
    get:
      consumes:
      - application/json
      description: Devuelve la lista completa de usuarios registrados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Usuario'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Devuelve todos los usuarios
      tags:
      - Usuarios
    post:
      consumes:
      - application/json
      description: Agrega un usuario a la base de datos
      parameters:
      - description: Usuario a crear
        in: body
        name: usuario
        required: true
        schema:
          $ref: '#/definitions/request.CreateUsuarioRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Usuario'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Crear un nuevo usuario
      tags:
      - Usuarios
  /api/usuarios/{email}/{password}/clases/{clase_id}:
    post:
      consumes:
      - application/json
      description: Permite que un usuario vea una clase y actualiza su progreso en
        el curso
      parameters:
      - description: Correo del usuario
        in: path
        name: email
        required: true
        type: string
      - description: Contrase침a del usuario
        in: path
        name: password
        required: true
        type: string
      - description: ID de la clase
        in: path
        name: clase_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.VerClaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Ver una clase
      tags:
      - Usuarios
  /api/usuarios/cursos:
    get:
      consumes:
      - application/json
      description: Devuelve la lista de cursos en los que un usuario est치 inscrito
      parameters:
      - description: Correo del usuario
        in: query
        name: email
        required: true
        type: string
      - description: Contrase침a del usuario
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Curso'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Obtener cursos inscritos de un usuario
      tags:
      - Usuarios
  /api/usuarios/inscripcion:
    post:
      consumes:
      - application/json
      description: Inscribe a un usuario en un curso espec칤fico
      parameters:
      - description: Datos de inscripci칩n
        in: body
        name: inscripcion
        required: true
        schema:
          $ref: '#/definitions/request.InscripcionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.InscripcionResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Inscribir un usuario en un curso
      tags:
      - Usuarios
  /api/usuarios/progreso:
    get:
      consumes:
      - application/json
      description: Devuelve el progreso de los cursos en los que un usuario est치 inscrito
      parameters:
      - description: Email del usuario
        in: query
        name: email
        required: true
        type: string
      - description: Contrase침a del usuario
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.ProgresoCurso'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Devuelve el progreso de los cursos de un usuario
      tags:
      - Usuarios
  /api/usuarios/usuario:
    get:
      consumes:
      - application/json
      description: Devuelve un usuario en espec칤fico por su correo y contrase침a
      parameters:
      - description: Correo del usuario
        in: query
        name: email
        required: true
        type: string
      - description: Contrase침a del usuario
        in: query
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Usuario'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorResponse'
      summary: Obtener un usuario por correo y contrase침a
      tags:
      - Usuarios
swagger: "2.0"
